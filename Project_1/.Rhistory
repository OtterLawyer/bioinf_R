4*11/28
chistat <- (2 - 1.071429)^2 / 1.071429 + (8 - 3.928571)^2 / 3.928571 + (1 - 1.428571)^2 / 1.428571 + (3 - 1.571429)^2 / 1.571429
chistat
qchisq(0.95,1)
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat <- factorial(3) + factorial(11) + factorial(10) + factorial(4) / factorial(2) / factorial(1) / factorial(8) / factorial(3)
Fisher_stat
factorial(8)
factorial(3) + factorial(11) + factorial(10) + factorial(4)
factorial(3) + factorial(11) + factorial(10) + factorial(4) / factorial(2)
factorial(10)
factorial(11)
factorial(4) / factorial(2)
factorial(4)
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat <- (factorial(3) + factorial(11) + factorial(10) + factorial(4)) / factorial(2) / factorial(1) / factorial(8) / factorial(3)
Fisher_stat
df <- data.frame(c(2,1),c(8,3))
df
df <- data.frame(c(2,8),c(1,3))
df
fisher.test(df, alternative="greater")
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(2) / factorial(1) / factorial(8) / factorial(3) / factorial(28)
Fisher_stat
factorial(1)
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(2) / factorial(8) / factorial(3) / factorial(28)
fisher.test(df, alternative="greater")
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(12)/factorial(6)/factorial(7)/factorial(7)/factorial(32)
fisher.test(table(mtcars$am,mtcars$vs), alternative="greater")
Fisher_stat2 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(3) / factirial(0) factorial(7) / factorial(4) / factorial(28)
Fisher_stat2 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(3) / factorial(0) factorial(7) / factorial(4) / factorial(28)
Fisher_stat2 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(3) / factorial(0) / factorial(7) / factorial(4) / factorial(28)
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat1 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(2) / / factirial(1) / factorial(8) / factorial(3) / factorial(28)
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat1 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(2) / factirial(1) / factorial(8) / factorial(3) / factorial(28)
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat1 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(2) / factorial(1) / factorial(8) / factorial(3) / factorial(28)
Fisher_stat2 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(3) / factorial(0) / factorial(7) / factorial(4) / factorial(28)
Fisher_stat2 <- Fisher_stat1 + Fisher_stat2
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(12)/factorial(6)/factorial(7)/factorial(7)/factorial(32)
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(13)/factorial(5)/factorial(6)/factorial(8)/factorial(32)
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(14)/factorial(4)/factorial(5)/factorial(9)/factorial(32)
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(15)/factorial(3)/factorial(4)/factorial(10)/factorial(32)
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(16)/factorial(2)/factorial(3)/factorial(11)/factorial(32)
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(17)/factorial(1)/factorial(2)/factorial(12)/factorial(32)
factorial(19)*factorial(18)*factorial(13)*factorial(14)/factorial(18)/factorial(0)/factorial(1)/factorial(13)/factorial(32)
0.1834096 + 0.07406926 + 0.01763554
# сверимся со встроенной функцией
fisher.test(table(mtcars$am,mtcars$vs), alternative="greater")
Fisher_stat2 <- Fisher_stat1 + Fisher_stat2
df <- data.frame(c(2,8),c(1,3))
fisher.test(df, alternative="greater")
p_fisher <- fisher.test(df, alternative="greater")$p.value
# Выбираем точный критерий Фишера, т.к. число наблюдений в <5.
#    Возьмём нашу исходную таблицу и посчитаем суммы строк и столбцов
#  2   1  | 3       a     b  | a + b
#  8    3  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
# (a + b)!(c + d)!(a + c)!(b + d)!/(a!b!c!d!n!) # вероятность получить такое или более экстремальное значение статистики
Fisher_stat1 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(2) / factorial(1) / factorial(8) / factorial(3) / factorial(28)
#  3   0  | 3       a     b  | a + b
#  7    4  | 11       c     d  | c + d
#  --------         ---------
#  10   4   28      a+c   b+d   a+b+c+d
Fisher_stat2 <- factorial(3) * factorial(11) * factorial(10) * factorial(4) / factorial(3) / factorial(0) / factorial(7) / factorial(4) / factorial(28)
Fisher_stat2 <- Fisher_stat1 + Fisher_stat2
df <- data.frame(c(2,8),c(1,3))
p_fisher <- fisher.test(df, alternative="greater")$p.value
FALSE
getwd()
setwd('C:/Users/keyfi/Documents/Bioinf_Institute/R/bioinf_R/Project_1')
getwd()
day <- read.csv('day.csv', sep=";", na.strings=c("","NA"))
day <- read.csv('day.csv', sep=";", na.strings=c("","NA"))
dayna <- read.csv('day.csv')
View(dayna)
View(day)
day <- read.csv('day.csv', na.strings=c("","NA"))
day <- read.csv('day.csv', na.strings=c("","NA"))
```{r libraries}
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
---
title: "Project 1"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::write_bib(c(.packages()), "packages.bib")
str(day)
summary(day)
sum(is.na(day))
sum(is.na(day$instant))
sum(is.na(day$dteday))
sum(is.na(day$season))
sum(is.na(day$temp))
sum(is.na(day$atemp))
sum(is.na(day$hum))
sum(is.na(day$windspeed))
sum(is.na(insurance))
sum(is.na(day))
insurance_without_na <- na.omit(day)
summary(insurance_without_na)
sum(is.na(day))
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na <- na.omit(day)
sum(is.na(day))
sum(is.na(day_without_na)
)
length((day_without_na$instant))
day_without_na$season <- as.factor(day_without_na$season)
summary(insurance_without_na_child_fix)
day_without_na$season <- as.factor(day_without_na$season)
summary(day_without_na)
str(day_without_na)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
str(day_without_na)
ggplot(day_without_na, aes(x=instant))+
geom_density()
ggplot(day_without_na, aes(x=season))+
geom_density()
ggplot(day_without_na, aes(x=temp))+
geom_density()
ggplot(day_without_na, aes(x=atemp))+
geom_density()
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
```{r plot small, echo=F, fig.align="center", fig.height=3, fig.width=3}
```{r plot small, echo=F, fig.align="center", fig.height=3, fig.width=3}
mean(day_without_na$windspeed)
max(day_without_na$windspeed)
min(day_without_na$windspeed)
install.packages("nortest")
# install.packages("nortest")
library(nortest)
lelie.test(day_without_na$temp)
lillie.test(day_without_na$temp)
ggplot(day_without_na, aes(x=temp))+
geom_density()
lillie.test(day_without_na$atemp)
lillie.test(day_without_na$hum)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
ggplot(day_without_na, aes(x=hum))+
+   geom_density()
ggplot(day_without_na, aes(x=hum))+
geom_density()
f <- filter(day_without_na, hum < 0.001)
ggplot(f, aes(x=hum))+
+     geom_density()
ggplot(f, aes(x=hum))+
geom_density()
View(f)
f <- filter(day_without_na, hum > 0.001)
ggplot(f, aes(x=hum))+
geom_density()
ggplot(f, aes(x=hum))+
geom_density()
lillie.test(f)
lillie.test(f$hum)
lillie.test(day_without_na$hum)
lillie.test(day_without_na$temp)
lillie.test(day_without_na$atemp)
lillie.test(day_without_na$hum)
lillie.test(day_without_na$windspeed)
lillie.test(day_without_na$casual)
mean(day_without_na$casual)
mean(day_without_na$cnt)
f <- filter(day_without_na, hum > 0.001 | windspeed < 0.45)
ggplot(f, aes(x=windspeed))+
geom_density()
f <- filter(day_without_na, hum > 0.001 | windspeed < 0.45)
@R-knitr
f <- filter(day_without_na, hum > 0.001 | windspeed < 0.45)
f <- filter(day_without_na, windspeed < 0.45)
ggplot(f, aes(x=windspeed))+
geom_density()
filter(day_without_na, hum > 0.001)
ggplot(day, aes(x = windspeed, y=hum))+
geom_point()
ggplot(day, aes(x = windspeed, y=instant))+
geom_point()
ggplot(day, aes(x = temp, y=instant))+
geom_point()
sum(is.na(day_without_na))
ggplot(day, aes(x = instant, y=instant))+
geom_point()
ggplot(day, aes(x = instant, y=temp))+
geom_point()
ggplot(day, aes(x = instant, y=atemp))+
geom_point()
ggplot(day, aes(x = instant, y=windspeed))+
geom_point()
ggplot(day, aes(x = weathersit, y=windspeed))+
geom_point()
ggplot(day, aes(x = windspeed, y=weathersit))+
geom_point()
ggplot(day, aes(x = temp, y=weathersit))+
geom_point()
ggplot(day, aes(x = instant, y=hum))+
geom_point()
ggplot(day, aes(x = weathersit, y=hum))+
geom_point()
ggplot(day, aes(x = instant, y=hum))+
geom_point()
ggplot(day, aes(x = season, y=hum))+
geom_point()
plot(day_without_na)
plot(insurance_without_na_child_fix_s_s_r)
plot(insurance_without_na_child_fix_s_s_r)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
insurance <- read.csv("insurance.csv", sep=";")
str(insurance)
summary(insurance)
sum(is.na(insurance[is.na(insurance)] <- 0))
#insurance_without_na <-
#summary(insurance_without_na)
insurance_without_na <- na.omit(insurance)
summary(insurance_without_na)
sort(unique(insurance_without_na$children))
insurance_without_na_child <- filter(insurance_without_na, children!="22" & children!="33")
str(filter(insurance_without_na, !(children %in% c("22","33"))))
insurance_without_na_child_fix <- insurance_without_na_child %>% mutate(children = case_when(
children == "Zero" ~ 0,
children == "One" ~ 1,
children == "Two" ~ 2,
children == "Three" ~ 3,
TRUE ~ as.double(children)))
summary(insurance_without_na_child_fix)
insurance_without_na_child_fix$sex <- as.factor(insurance_without_na_child_fix$sex)
insurance_without_na_child_fix$smoker <- as.factor(insurance_without_na_child_fix$smoker)
insurance_without_na_child_fix$region <- as.factor(insurance_without_na_child_fix$region)
summary(insurance_without_na_child_fix)
insurance_without_na_child_fix_s <- insurance_without_na_child_fix %>% mutate(sex=casefold(sex, upper = F))
insurance_without_na_child_fix_s$sex <- as.factor(insurance_without_na_child_fix_s$sex)
summary(insurance_without_na_child_fix_s)
insurance_without_na_child_fix_s_s <- insurance_without_na_child_fix_s %>% mutate(smoker=casefold(smoker, upper = F))
insurance_without_na_child_fix_s_s$smoker <- as.factor(insurance_without_na_child_fix_s_s$smoker)
summary(insurance_without_na_child_fix_s_s)
insurance_without_na_child_fix_s_s <-insurance_without_na_child_fix_s_s %>%
mutate(smoker = if_else(smoker=="false","no",as.character(smoker))) %>%
mutate(smoker = if_else(smoker=="true","yes",as.character(smoker)))
insurance_without_na_child_fix_s_s$smoker <- as.factor(insurance_without_na_child_fix_s_s$smoker)
summary(insurance_without_na_child_fix_s_s)
sort(unique(insurance_without_na_child_fix_s_s$region))
insurance_without_na_child_fix_s_s_r <- insurance_without_na_child_fix_s_s %>%
mutate(region = case_when(region == "norhwest" ~ "northwest",
region == "nothwest" ~ "northwest",
region == "sothwest" ~ "southwest",
region == "sutheast" ~ "southeast",
T ~ as.character(region)))
insurance_without_na_child_fix_s_s_r$region <- as.factor(insurance_without_na_child_fix_s_s_r$region)
summary(insurance_without_na_child_fix_s_s_r)
ggplot(insurance_without_na_child_fix_s_s_r, aes(x=age))+
geom_density()
ggplot(insurance_without_na_child_fix_s_s_r, aes(x=age, y=bmi))+
geom_point()
filter(insurance_without_na_child_fix_s_s_r, bmi>100 | age > 75 )
insurance_without_na_child_fix_s_s_r <- filter(insurance_without_na_child_fix_s_s_r, !(bmi>100 | age > 75))
ggplot(insurance_without_na_child_fix_s_s_r, aes(x = age, y=charges))+
geom_point()
filter(insurance_without_na_child_fix_s_s_r, age>60 & charges < 10000)
insurance_clean <- filter(insurance_without_na_child_fix_s_s_r, !(age>60 & charges < 10000))
plot(insurance_without_na_child_fix_s_s_r)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
```{r}
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na$season <- as.factor(day_without_na$season)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
summary(day_without_na)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
filter(day_without_na, hum > 0.001)
ggplot(day, aes(x = season, y=hum))+
geom_point()
plot(day_without_na)
plot(day)
plot(day_without_na)
IQR(day_without_na$instant)
t.test(day_without_na$temp)
View(day_without_na)
str(day_without_na)
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
filter(day_without_na, hum > 0.001)
filter(day_without_na, hum > 0.001)
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
ggplot(day, aes(x=windspeed))+
geom_density()
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
ggplot(day_without_na, aes(x = instant, y=cmt))+
geom_point()
ggplot(day_without_na, aes(x = instant, y=cnt))+
geom_point()
ggplot(day_without_na, aes(x = cnt))+
geom_point()
ggplot(day_without_na, aes(x=cnt))+
geom_point()
ggplot(day_without_na, aes(x=cnt))+
geom_density()
filter(day_without_na, cnt > 30)
day_without_na <- filter(day_without_na, cnt > 30)
ggplot(day_without_na, aes(x=cnt))+
geom_density()
View(day)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
#library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na$season <- as.factor(day_without_na$season)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
summary(day_without_na)
ggplot(day_without_na, aes(x=hum))+
geom_density()
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
plot(day_without_na)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
#library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na$season <- as.factor(day_without_na$season)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
summary(day_without_na)
ggplot(day_without_na, aes(x=hum))+
geom_density()
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=hum))+
geom_density()
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
#library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na$season <- as.factor(day_without_na$season)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
summary(day_without_na)
ggplot(day_without_na, aes(x=hum))+
geom_density()
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
ggplot(day_without_na, aes(x=cnt))+
geom_density()
filter(day_without_na, cnt > 30)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
#library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na$season <- as.factor(day_without_na$season)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
summary(day_without_na)
ggplot(day_without_na, aes(x=hum))+
geom_density()
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
ggplot(day_without_na, aes(x=cnt))+
geom_density()
day_without_na <- filter(day_without_na, cnt > 30)
ggplot(day_without_na, aes(x=cnt))+
geom_density()
knitr::opts_chunk$set(echo = TRUE)
# install.packages("nortest")
#library(nortest)
library(dplyr)
library(ggplot2)
library(knitr)
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
day <- read.csv('day.csv', na.strings=c("","NA"))
str(day)
day_without_na <- na.omit(day)
summary(day_without_na)
day_without_na$season <- as.factor(day_without_na$season)
day_without_na$weathersit <- as.factor(day_without_na$weathersit)
summary(day_without_na)
ggplot(day_without_na, aes(x=hum))+
geom_density()
day_without_na <- filter(day_without_na, hum > 0.001)
ggplot(day_without_na, aes(x=hum))+
geom_density()
ggplot(day_without_na, aes(x=windspeed))+
geom_density()
ggplot(day_without_na, aes(x=cnt))+
geom_density()
day_without_na <- filter(day_without_na, cnt > 30)
ggplot(day_without_na, aes(x=cnt))+
geom_density()
